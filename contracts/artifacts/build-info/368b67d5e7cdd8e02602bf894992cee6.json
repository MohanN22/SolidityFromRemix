{
	"id": "368b67d5e7cdd8e02602bf894992cee6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n\r\nerror TransferFailed();\r\nerror NeedsMoreThanZero();\r\ncontract staking is ReentrancyGuard{\r\n    IERC20 public s_stakingToken;\r\n    IERC20 public s_rewardsToken;\r\n\r\n    //this is reward token per second\r\n\r\n    uint256 public constant REWARD_RATE=100;\r\n    uint256 public s_lastUpdateTime;\r\n    uint256 public s_rewardPerTokenStored;\r\n\r\n    mapping(address=>uint256) public s_userRewardPerTokenPaid;\r\n    mapping(address=>uint256) public s_rewards;\r\n\r\n    uint256 private s_totalSupply;\r\n    mapping(address=>uint256) public s_balances;\r\n\r\n    event Staked(address indexed user,uint256 indexed amount);\r\n    event withdrewStake(address indexed user,uint256 indexed amount);\r\n    event RewardsClaimed(address indexed user,uint256 indexed amount);\r\n\r\n    constructor(address stakingToken, address rewardsToken){\r\n        s_stakingToken=IERC20(stakingToken);\r\n        s_rewardsToken=IERC20(rewardsToken);\r\n    }\r\n\r\n    //how much reward a token gets based on how long its benn in the contract\r\n    function rewardPerToken() public view returns(uint256){\r\n        if(s_totalSupply==0){\r\n            return s_rewardPerTokenStored;\r\n        }\r\n\r\n        return s_rewardPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply);\r\n    }\r\n\r\n    function earned(address account) public view returns(uint256){\r\n        return((s_balances[account]*(rewardPerToken()-s_userRewardPerTokenPaid[account]))/1e18)+s_rewards[account];\r\n    }\r\n\r\n    function stake(uint256 amount)external updateReward(msg.sender) nonReentrant moreThanZero(amount) {\r\n        s_totalSupply+=amount;\r\n        s_balances[msg.sender]+=amount;\r\n        emit Staked(msg.sender,amount);\r\n        bool success=s_stakingToken.transfer(address(this),amount);\r\n        if(!success){\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender){\r\n        s_totalSupply-=amount;\r\n        s_balances[msg.sender]-=amount;\r\n        emit withdrewStake(msg.sender,amount);\r\n        bool success=s_stakingToken.transfer(msg.sender,amount);\r\n        if(!success){\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    function claimReward() external nonReentrant updateReward(msg.sender){\r\n        uint256 reward=s_rewards[msg.sender];\r\n        s_rewards[msg.sender]=0;\r\n        emit RewardsClaimed(msg.sender,reward);\r\n        bool success=s_rewardsToken.transfer(msg.sender,reward);\r\n        if(!success){\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    modifier updateReward(address account)\r\n    {\r\n        s_rewardPerTokenStored=rewardPerToken();\r\n        s_lastUpdateTime = block.timestamp;\r\n        s_rewards[account]= earned(account);\r\n        s_userRewardPerTokenPaid[account]=s_rewardPerTokenStored;\r\n        _;\r\n    }\r\n    modifier moreThanZero(uint256 amount){\r\n        if(amount==0){\r\n            revert NeedsMoreThanZero();\r\n        }\r\n        _;\r\n    }\r\n    function getStaked(address account) public view returns(uint256)\r\n    {\r\n        return s_balances[account];\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrewStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":237:3270  contract staking is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":934:1089  constructor(address stakingToken, address rewardsToken){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1022:1034  stakingToken */\n  dup2\n    /* \"contracts/Staking.sol\":1000:1014  s_stakingToken */\n  0x01\n  0x00\n    /* \"contracts/Staking.sol\":1000:1035  s_stakingToken=IERC20(stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1068:1080  rewardsToken */\n  dup1\n    /* \"contracts/Staking.sol\":1046:1060  s_rewardsToken */\n  0x02\n  0x00\n    /* \"contracts/Staking.sol\":1046:1081  s_rewardsToken=IERC20(rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":934:1089  constructor(address stakingToken, address rewardsToken){\r... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":237:3270  contract staking is ReentrancyGuard{\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":237:3270  contract staking is ReentrancyGuard{\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":237:3270  contract staking is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbea08151\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf245ace4\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xab32eb69\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadca9b72\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x304ac91b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x304ac91b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x399080ec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6aa0838f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0bd21c56\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":1444:1630  function earned(address account) public view returns(uint256){\r... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":314:342  IERC20 public s_rewardsToken */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":2007:2354  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender){\r... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Staking.sol\":476:513  uint256 public s_rewardPerTokenStored */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3132:3247  function getStaked(address account) public view returns(uint256)\r... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":392:431  uint256 public constant REWARD_RATE=100 */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":438:469  uint256 public s_lastUpdateTime */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1638:1999  function stake(uint256 amount)external updateReward(msg.sender) nonReentrant moreThanZero(amount) {\r... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Staking.sol\":673:716  mapping(address=>uint256) public s_balances */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":279:307  IERC20 public s_stakingToken */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":2362:2707  function claimReward() external nonReentrant updateReward(msg.sender){\r... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Staking.sol\":586:628  mapping(address=>uint256) public s_rewards */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1176:1436  function rewardPerToken() public view returns(uint256){\r... */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":522:579  mapping(address=>uint256) public s_userRewardPerTokenPaid */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1444:1630  function earned(address account) public view returns(uint256){\r... */\n    tag_23:\n        /* \"contracts/Staking.sol\":1497:1504  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":1604:1613  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":1604:1622  s_rewards[account] */\n      0x00\n        /* \"contracts/Staking.sol\":1614:1621  account */\n      dup4\n        /* \"contracts/Staking.sol\":1604:1622  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1598:1602  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Staking.sol\":1562:1586  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Staking.sol\":1562:1595  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Staking.sol\":1587:1594  account */\n      dup6\n        /* \"contracts/Staking.sol\":1562:1595  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1545:1561  rewardPerToken() */\n      tag_71\n        /* \"contracts/Staking.sol\":1545:1559  rewardPerToken */\n      tag_64\n        /* \"contracts/Staking.sol\":1545:1561  rewardPerToken() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Staking.sol\":1545:1595  rewardPerToken()-s_userRewardPerTokenPaid[account] */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Staking.sol\":1524:1534  s_balances */\n      0x08\n        /* \"contracts/Staking.sol\":1524:1543  s_balances[account] */\n      0x00\n        /* \"contracts/Staking.sol\":1535:1542  account */\n      dup7\n        /* \"contracts/Staking.sol\":1524:1543  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1524:1596  s_balances[account]*(rewardPerToken()-s_userRewardPerTokenPaid[account]) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Staking.sol\":1523:1602  (s_balances[account]*(rewardPerToken()-s_userRewardPerTokenPaid[account]))/1e18 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/Staking.sol\":1522:1622  ((s_balances[account]*(rewardPerToken()-s_userRewardPerTokenPaid[account]))/1e18)+s_rewards[account] */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/Staking.sol\":1516:1622  return((s_balances[account]*(rewardPerToken()-s_userRewardPerTokenPaid[account]))/1e18)+s_rewards[account] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1444:1630  function earned(address account) public view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":314:342  IERC20 public s_rewardsToken */\n    tag_27:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2007:2354  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender){\r... */\n    tag_33:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_81\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Staking.sol\":2076:2086  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      tag_84\n        /* \"contracts/Staking.sol\":2793:2807  rewardPerToken */\n      tag_64\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Staking.sol\":2770:2792  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Staking.sol\":2770:2809  s_rewardPerTokenStored=rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2839:2854  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2820:2836  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Staking.sol\":2820:2854  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      tag_85\n        /* \"contracts/Staking.sol\":2892:2899  account */\n      dup2\n        /* \"contracts/Staking.sol\":2885:2891  earned */\n      tag_23\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/Staking.sol\":2865:2874  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2875:2882  account */\n      dup4\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2865:2900  s_rewards[account]= earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2945:2967  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":2911:2935  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2936:2943  account */\n      dup4\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2911:2967  s_userRewardPerTokenPaid[account]=s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2113:2119  amount */\n      dup2\n        /* \"contracts/Staking.sol\":2098:2111  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/Staking.sol\":2098:2119  s_totalSupply-=amount */\n      dup3\n      dup3\n      sload\n      tag_87\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_87:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2154:2160  amount */\n      dup2\n        /* \"contracts/Staking.sol\":2130:2140  s_balances */\n      0x08\n        /* \"contracts/Staking.sol\":2130:2152  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2141:2151  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2130:2152  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Staking.sol\":2130:2160  s_balances[msg.sender]-=amount */\n      dup3\n      dup3\n      sload\n      tag_88\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_88:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2201:2207  amount */\n      dup2\n        /* \"contracts/Staking.sol\":2190:2200  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2176:2208  withdrewStake(msg.sender,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Staking.sol\":2219:2231  bool success */\n      0x00\n        /* \"contracts/Staking.sol\":2232:2246  s_stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2232:2255  s_stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staking.sol\":2256:2266  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2267:2273  amount */\n      dup6\n        /* \"contracts/Staking.sol\":2232:2274  s_stakingToken.transfer(msg.sender,amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/Staking.sol\":2219:2274  bool success=s_stakingToken.transfer(msg.sender,amount) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2289:2296  success */\n      dup1\n        /* \"contracts/Staking.sol\":2285:2347  if(!success){\r... */\n      tag_96\n      jumpi\n        /* \"contracts/Staking.sol\":2319:2335  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Staking.sol\":2285:2347  if(!success){\r... */\n    tag_96:\n        /* \"contracts/Staking.sol\":2087:2354  {\r... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_97\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Staking.sol\":2007:2354  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender){\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":476:513  uint256 public s_rewardPerTokenStored */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":3132:3247  function getStaked(address account) public view returns(uint256)\r... */\n    tag_39:\n        /* \"contracts/Staking.sol\":3188:3195  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3220:3230  s_balances */\n      0x08\n        /* \"contracts/Staking.sol\":3220:3239  s_balances[account] */\n      0x00\n        /* \"contracts/Staking.sol\":3231:3238  account */\n      dup4\n        /* \"contracts/Staking.sol\":3220:3239  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":3213:3239  return s_balances[account] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3132:3247  function getStaked(address account) public view returns(uint256)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":392:431  uint256 public constant REWARD_RATE=100 */\n    tag_42:\n        /* \"contracts/Staking.sol\":428:431  100 */\n      0x64\n        /* \"contracts/Staking.sol\":392:431  uint256 public constant REWARD_RATE=100 */\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":438:469  uint256 public s_lastUpdateTime */\n    tag_45:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":1638:1999  function stake(uint256 amount)external updateReward(msg.sender) nonReentrant moreThanZero(amount) {\r... */\n    tag_49:\n        /* \"contracts/Staking.sol\":1690:1700  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      tag_101\n        /* \"contracts/Staking.sol\":2793:2807  rewardPerToken */\n      tag_64\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Staking.sol\":2770:2792  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Staking.sol\":2770:2809  s_rewardPerTokenStored=rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2839:2854  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2820:2836  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Staking.sol\":2820:2854  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      tag_102\n        /* \"contracts/Staking.sol\":2892:2899  account */\n      dup2\n        /* \"contracts/Staking.sol\":2885:2891  earned */\n      tag_23\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Staking.sol\":2865:2874  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2875:2882  account */\n      dup4\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2865:2900  s_rewards[account]= earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2945:2967  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":2911:2935  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2936:2943  account */\n      dup4\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2911:2967  s_userRewardPerTokenPaid[account]=s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking.sol\":1728:1734  amount */\n      dup2\n        /* \"contracts/Staking.sol\":3052:3053  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3044:3050  amount */\n      dup2\n        /* \"contracts/Staking.sol\":3044:3053  amount==0 */\n      eq\n        /* \"contracts/Staking.sol\":3041:3107  if(amount==0){\r... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/Staking.sol\":3076:3095  NeedsMoreThanZero() */\n      mload(0x40)\n      0xf45911f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Staking.sol\":3041:3107  if(amount==0){\r... */\n    tag_106:\n        /* \"contracts/Staking.sol\":1762:1768  amount */\n      dup3\n        /* \"contracts/Staking.sol\":1747:1760  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/Staking.sol\":1747:1768  s_totalSupply+=amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1803:1809  amount */\n      dup3\n        /* \"contracts/Staking.sol\":1779:1789  s_balances */\n      0x08\n        /* \"contracts/Staking.sol\":1779:1801  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1790:1800  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1779:1801  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Staking.sol\":1779:1809  s_balances[msg.sender]+=amount */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1843:1849  amount */\n      dup3\n        /* \"contracts/Staking.sol\":1832:1842  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1825:1850  Staked(msg.sender,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Staking.sol\":1861:1873  bool success */\n      0x00\n        /* \"contracts/Staking.sol\":1874:1888  s_stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":1874:1897  s_stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staking.sol\":1906:1910  this */\n      address\n        /* \"contracts/Staking.sol\":1912:1918  amount */\n      dup7\n        /* \"contracts/Staking.sol\":1874:1919  s_stakingToken.transfer(address(this),amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_114:\n        /* \"contracts/Staking.sol\":1861:1919  bool success=s_stakingToken.transfer(address(this),amount) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1934:1941  success */\n      dup1\n        /* \"contracts/Staking.sol\":1930:1992  if(!success){\r... */\n      tag_115\n      jumpi\n        /* \"contracts/Staking.sol\":1964:1980  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Staking.sol\":1930:1992  if(!success){\r... */\n    tag_115:\n        /* \"contracts/Staking.sol\":1736:1999  {\r... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_116\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Staking.sol\":1638:1999  function stake(uint256 amount)external updateReward(msg.sender) nonReentrant moreThanZero(amount) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":673:716  mapping(address=>uint256) public s_balances */\n    tag_52:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":279:307  IERC20 public s_stakingToken */\n    tag_55:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2362:2707  function claimReward() external nonReentrant updateReward(msg.sender){\r... */\n    tag_58:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":2420:2430  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      tag_120\n        /* \"contracts/Staking.sol\":2793:2807  rewardPerToken */\n      tag_64\n        /* \"contracts/Staking.sol\":2793:2809  rewardPerToken() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Staking.sol\":2770:2792  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Staking.sol\":2770:2809  s_rewardPerTokenStored=rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2839:2854  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2820:2836  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Staking.sol\":2820:2854  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      tag_121\n        /* \"contracts/Staking.sol\":2892:2899  account */\n      dup2\n        /* \"contracts/Staking.sol\":2885:2891  earned */\n      tag_23\n        /* \"contracts/Staking.sol\":2885:2900  earned(account) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking.sol\":2865:2874  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2875:2882  account */\n      dup4\n        /* \"contracts/Staking.sol\":2865:2883  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2865:2900  s_rewards[account]= earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2945:2967  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":2911:2935  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Staking.sol\":2936:2943  account */\n      dup4\n        /* \"contracts/Staking.sol\":2911:2944  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2911:2967  s_userRewardPerTokenPaid[account]=s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2442:2456  uint256 reward */\n      0x00\n        /* \"contracts/Staking.sol\":2457:2466  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":2457:2478  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2467:2477  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2457:2478  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":2442:2478  uint256 reward=s_rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2511:2512  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2489:2498  s_rewards */\n      0x06\n        /* \"contracts/Staking.sol\":2489:2510  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2499:2509  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2489:2510  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2489:2512  s_rewards[msg.sender]=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2554:2560  reward */\n      dup1\n        /* \"contracts/Staking.sol\":2543:2553  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2528:2561  RewardsClaimed(msg.sender,reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Staking.sol\":2572:2584  bool success */\n      0x00\n        /* \"contracts/Staking.sol\":2585:2599  s_rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2585:2608  s_rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staking.sol\":2609:2619  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2620:2626  reward */\n      dup5\n        /* \"contracts/Staking.sol\":2585:2627  s_rewardsToken.transfer(msg.sender,reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_127:\n        /* \"contracts/Staking.sol\":2572:2627  bool success=s_rewardsToken.transfer(msg.sender,reward) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2642:2649  success */\n      dup1\n        /* \"contracts/Staking.sol\":2638:2700  if(!success){\r... */\n      tag_128\n      jumpi\n        /* \"contracts/Staking.sol\":2672:2688  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Staking.sol\":2638:2700  if(!success){\r... */\n    tag_128:\n        /* \"contracts/Staking.sol\":2431:2707  {\r... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_129\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Staking.sol\":2362:2707  function claimReward() external nonReentrant updateReward(msg.sender){\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":586:628  mapping(address=>uint256) public s_rewards */\n    tag_61:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":1176:1436  function rewardPerToken() public view returns(uint256){\r... */\n    tag_64:\n        /* \"contracts/Staking.sol\":1222:1229  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":1259:1260  0 */\n      dup1\n        /* \"contracts/Staking.sol\":1244:1257  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":1244:1260  s_totalSupply==0 */\n      eq\n        /* \"contracts/Staking.sol\":1241:1317  if(s_totalSupply==0){\r... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/Staking.sol\":1283:1305  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":1276:1305  return s_rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"contracts/Staking.sol\":1241:1317  if(s_totalSupply==0){\r... */\n    tag_131:\n        /* \"contracts/Staking.sol\":1414:1427  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":1408:1412  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Staking.sol\":428:431  100 */\n      0x64\n        /* \"contracts/Staking.sol\":1378:1394  s_lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":1362:1377  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":1362:1394  block.timestamp-s_lastUpdateTime */\n      tag_132\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"contracts/Staking.sol\":1361:1407  (block.timestamp-s_lastUpdateTime)*REWARD_RATE */\n      tag_133\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_133:\n        /* \"contracts/Staking.sol\":1361:1412  (block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18 */\n      tag_134\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_134:\n        /* \"contracts/Staking.sol\":1360:1427  ((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply */\n      tag_135\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":1336:1358  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":1336:1428  s_rewardPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply) */\n      tag_136\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":1329:1428  return s_rewardPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1176:1436  function rewardPerToken() public view returns(uint256){\r... */\n    tag_130:\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":522:579  mapping(address=>uint256) public s_userRewardPerTokenPaid */\n    tag_68:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_143:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_145\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_147:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_149\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_151:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_153\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_22:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":516:635   */\n    tag_156:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_159\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_143\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1120   */\n    tag_95:\n        /* \"#utility.yul\":842:848   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x20\n        /* \"#utility.yul\":879:888   */\n      dup3\n        /* \"#utility.yul\":870:877   */\n      dup5\n        /* \"#utility.yul\":866:889   */\n      sub\n        /* \"#utility.yul\":862:894   */\n      slt\n        /* \"#utility.yul\":859:978   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":897:976   */\n      tag_162\n      tag_158\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":859:978   */\n    tag_161:\n        /* \"#utility.yul\":1017:1018   */\n      0x00\n        /* \"#utility.yul\":1042:1103   */\n      tag_163\n        /* \"#utility.yul\":1095:1102   */\n      dup5\n        /* \"#utility.yul\":1086:1092   */\n      dup3\n        /* \"#utility.yul\":1075:1084   */\n      dup6\n        /* \"#utility.yul\":1071:1093   */\n      add\n        /* \"#utility.yul\":1042:1103   */\n      tag_147\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1032:1103   */\n      swap2\n      pop\n        /* \"#utility.yul\":988:1113   */\n      pop\n        /* \"#utility.yul\":775:1120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1455   */\n    tag_32:\n        /* \"#utility.yul\":1185:1191   */\n      0x00\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1222:1231   */\n      dup3\n        /* \"#utility.yul\":1213:1220   */\n      dup5\n        /* \"#utility.yul\":1209:1232   */\n      sub\n        /* \"#utility.yul\":1205:1237   */\n      slt\n        /* \"#utility.yul\":1202:1321   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1240:1319   */\n      tag_166\n      tag_158\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1202:1321   */\n    tag_165:\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1385:1438   */\n      tag_167\n        /* \"#utility.yul\":1430:1437   */\n      dup5\n        /* \"#utility.yul\":1421:1427   */\n      dup3\n        /* \"#utility.yul\":1410:1419   */\n      dup6\n        /* \"#utility.yul\":1406:1428   */\n      add\n        /* \"#utility.yul\":1385:1438   */\n      tag_151\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1375:1438   */\n      swap2\n      pop\n        /* \"#utility.yul\":1331:1448   */\n      pop\n        /* \"#utility.yul\":1126:1455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1579   */\n    tag_168:\n        /* \"#utility.yul\":1548:1572   */\n      tag_170\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1543:1546   */\n      dup3\n        /* \"#utility.yul\":1536:1573   */\n      mstore\n        /* \"#utility.yul\":1461:1579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1744   */\n    tag_172:\n        /* \"#utility.yul\":1686:1737   */\n      tag_174\n        /* \"#utility.yul\":1731:1736   */\n      dup2\n        /* \"#utility.yul\":1686:1737   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1674:1738   */\n      mstore\n        /* \"#utility.yul\":1585:1744   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1750:2116   */\n    tag_176:\n        /* \"#utility.yul\":1892:1895   */\n      0x00\n        /* \"#utility.yul\":1913:1980   */\n      tag_178\n        /* \"#utility.yul\":1977:1979   */\n      0x1f\n        /* \"#utility.yul\":1972:1975   */\n      dup4\n        /* \"#utility.yul\":1913:1980   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1906:1980   */\n      swap2\n      pop\n        /* \"#utility.yul\":1989:2082   */\n      tag_180\n        /* \"#utility.yul\":2078:2081   */\n      dup3\n        /* \"#utility.yul\":1989:2082   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2107:2109   */\n      0x20\n        /* \"#utility.yul\":2102:2105   */\n      dup3\n        /* \"#utility.yul\":2098:2110   */\n      add\n        /* \"#utility.yul\":2091:2110   */\n      swap1\n      pop\n        /* \"#utility.yul\":1750:2116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2240   */\n    tag_182:\n        /* \"#utility.yul\":2209:2233   */\n      tag_184\n        /* \"#utility.yul\":2227:2232   */\n      dup2\n        /* \"#utility.yul\":2209:2233   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2204:2207   */\n      dup3\n        /* \"#utility.yul\":2197:2234   */\n      mstore\n        /* \"#utility.yul\":2122:2240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2578   */\n    tag_90:\n        /* \"#utility.yul\":2367:2371   */\n      0x00\n        /* \"#utility.yul\":2405:2407   */\n      0x40\n        /* \"#utility.yul\":2394:2403   */\n      dup3\n        /* \"#utility.yul\":2390:2408   */\n      add\n        /* \"#utility.yul\":2382:2408   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2489   */\n      tag_187\n        /* \"#utility.yul\":2486:2487   */\n      0x00\n        /* \"#utility.yul\":2475:2484   */\n      dup4\n        /* \"#utility.yul\":2471:2488   */\n      add\n        /* \"#utility.yul\":2462:2468   */\n      dup6\n        /* \"#utility.yul\":2418:2489   */\n      tag_168\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2499:2571   */\n      tag_188\n        /* \"#utility.yul\":2567:2569   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup4\n        /* \"#utility.yul\":2552:2570   */\n      add\n        /* \"#utility.yul\":2543:2549   */\n      dup5\n        /* \"#utility.yul\":2499:2571   */\n      tag_182\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2246:2578   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2834   */\n    tag_29:\n        /* \"#utility.yul\":2691:2695   */\n      0x00\n        /* \"#utility.yul\":2729:2731   */\n      0x20\n        /* \"#utility.yul\":2718:2727   */\n      dup3\n        /* \"#utility.yul\":2714:2732   */\n      add\n        /* \"#utility.yul\":2706:2732   */\n      swap1\n      pop\n        /* \"#utility.yul\":2742:2827   */\n      tag_190\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2813:2822   */\n      dup4\n        /* \"#utility.yul\":2809:2826   */\n      add\n        /* \"#utility.yul\":2800:2806   */\n      dup5\n        /* \"#utility.yul\":2742:2827   */\n      tag_172\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2584:2834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2840:3259   */\n    tag_140:\n        /* \"#utility.yul\":3006:3010   */\n      0x00\n        /* \"#utility.yul\":3044:3046   */\n      0x20\n        /* \"#utility.yul\":3033:3042   */\n      dup3\n        /* \"#utility.yul\":3029:3047   */\n      add\n        /* \"#utility.yul\":3021:3047   */\n      swap1\n      pop\n        /* \"#utility.yul\":3093:3102   */\n      dup2\n        /* \"#utility.yul\":3087:3091   */\n      dup2\n        /* \"#utility.yul\":3083:3103   */\n      sub\n        /* \"#utility.yul\":3079:3080   */\n      0x00\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3064:3081   */\n      add\n        /* \"#utility.yul\":3057:3104   */\n      mstore\n        /* \"#utility.yul\":3121:3252   */\n      tag_192\n        /* \"#utility.yul\":3247:3251   */\n      dup2\n        /* \"#utility.yul\":3121:3252   */\n      tag_176\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3113:3252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2840:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3487   */\n    tag_25:\n        /* \"#utility.yul\":3358:3362   */\n      0x00\n        /* \"#utility.yul\":3396:3398   */\n      0x20\n        /* \"#utility.yul\":3385:3394   */\n      dup3\n        /* \"#utility.yul\":3381:3399   */\n      add\n        /* \"#utility.yul\":3373:3399   */\n      swap1\n      pop\n        /* \"#utility.yul\":3409:3480   */\n      tag_194\n        /* \"#utility.yul\":3477:3478   */\n      0x00\n        /* \"#utility.yul\":3466:3475   */\n      dup4\n        /* \"#utility.yul\":3462:3479   */\n      add\n        /* \"#utility.yul\":3453:3459   */\n      dup5\n        /* \"#utility.yul\":3409:3480   */\n      tag_182\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3265:3487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3574:3743   */\n    tag_179:\n        /* \"#utility.yul\":3658:3669   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup3\n        /* \"#utility.yul\":3687:3690   */\n      dup3\n        /* \"#utility.yul\":3680:3699   */\n      mstore\n        /* \"#utility.yul\":3732:3736   */\n      0x20\n        /* \"#utility.yul\":3727:3730   */\n      dup3\n        /* \"#utility.yul\":3723:3737   */\n      add\n        /* \"#utility.yul\":3708:3737   */\n      swap1\n      pop\n        /* \"#utility.yul\":3574:3743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3749:4054   */\n    tag_79:\n        /* \"#utility.yul\":3789:3792   */\n      0x00\n        /* \"#utility.yul\":3808:3828   */\n      tag_199\n        /* \"#utility.yul\":3826:3827   */\n      dup3\n        /* \"#utility.yul\":3808:3828   */\n      tag_185\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3803:3828   */\n      swap2\n      pop\n        /* \"#utility.yul\":3842:3862   */\n      tag_200\n        /* \"#utility.yul\":3860:3861   */\n      dup4\n        /* \"#utility.yul\":3842:3862   */\n      tag_185\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3837:3862   */\n      swap3\n      pop\n        /* \"#utility.yul\":3996:3997   */\n      dup3\n        /* \"#utility.yul\":3928:3994   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3924:3998   */\n      sub\n        /* \"#utility.yul\":3921:3922   */\n      dup3\n        /* \"#utility.yul\":3918:3999   */\n      gt\n        /* \"#utility.yul\":3915:4022   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4002:4020   */\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3915:4022   */\n    tag_201:\n        /* \"#utility.yul\":4046:4047   */\n      dup3\n        /* \"#utility.yul\":4043:4044   */\n      dup3\n        /* \"#utility.yul\":4039:4048   */\n      add\n        /* \"#utility.yul\":4032:4048   */\n      swap1\n      pop\n        /* \"#utility.yul\":3749:4054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4060:4245   */\n    tag_77:\n        /* \"#utility.yul\":4100:4101   */\n      0x00\n        /* \"#utility.yul\":4117:4137   */\n      tag_205\n        /* \"#utility.yul\":4135:4136   */\n      dup3\n        /* \"#utility.yul\":4117:4137   */\n      tag_185\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4112:4137   */\n      swap2\n      pop\n        /* \"#utility.yul\":4151:4171   */\n      tag_206\n        /* \"#utility.yul\":4169:4170   */\n      dup4\n        /* \"#utility.yul\":4151:4171   */\n      tag_185\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4146:4171   */\n      swap3\n      pop\n        /* \"#utility.yul\":4190:4191   */\n      dup3\n        /* \"#utility.yul\":4180:4215   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4195:4213   */\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4180:4215   */\n    tag_207:\n        /* \"#utility.yul\":4237:4238   */\n      dup3\n        /* \"#utility.yul\":4234:4235   */\n      dup3\n        /* \"#utility.yul\":4230:4239   */\n      div\n        /* \"#utility.yul\":4225:4239   */\n      swap1\n      pop\n        /* \"#utility.yul\":4060:4245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4599   */\n    tag_75:\n        /* \"#utility.yul\":4291:4298   */\n      0x00\n        /* \"#utility.yul\":4314:4334   */\n      tag_211\n        /* \"#utility.yul\":4332:4333   */\n      dup3\n        /* \"#utility.yul\":4314:4334   */\n      tag_185\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4309:4334   */\n      swap2\n      pop\n        /* \"#utility.yul\":4348:4368   */\n      tag_212\n        /* \"#utility.yul\":4366:4367   */\n      dup4\n        /* \"#utility.yul\":4348:4368   */\n      tag_185\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4343:4368   */\n      swap3\n      pop\n        /* \"#utility.yul\":4536:4537   */\n      dup2\n        /* \"#utility.yul\":4468:4534   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4464:4538   */\n      div\n        /* \"#utility.yul\":4461:4462   */\n      dup4\n        /* \"#utility.yul\":4458:4539   */\n      gt\n        /* \"#utility.yul\":4453:4454   */\n      dup3\n        /* \"#utility.yul\":4446:4455   */\n      iszero\n        /* \"#utility.yul\":4439:4456   */\n      iszero\n        /* \"#utility.yul\":4435:4540   */\n      and\n        /* \"#utility.yul\":4432:4563   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4543:4561   */\n      tag_214\n      tag_203\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4432:4563   */\n    tag_213:\n        /* \"#utility.yul\":4591:4592   */\n      dup3\n        /* \"#utility.yul\":4588:4589   */\n      dup3\n        /* \"#utility.yul\":4584:4593   */\n      mul\n        /* \"#utility.yul\":4573:4593   */\n      swap1\n      pop\n        /* \"#utility.yul\":4251:4599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4605:4796   */\n    tag_73:\n        /* \"#utility.yul\":4645:4649   */\n      0x00\n        /* \"#utility.yul\":4665:4685   */\n      tag_216\n        /* \"#utility.yul\":4683:4684   */\n      dup3\n        /* \"#utility.yul\":4665:4685   */\n      tag_185\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4660:4685   */\n      swap2\n      pop\n        /* \"#utility.yul\":4699:4719   */\n      tag_217\n        /* \"#utility.yul\":4717:4718   */\n      dup4\n        /* \"#utility.yul\":4699:4719   */\n      tag_185\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4694:4719   */\n      swap3\n      pop\n        /* \"#utility.yul\":4738:4739   */\n      dup3\n        /* \"#utility.yul\":4735:4736   */\n      dup3\n        /* \"#utility.yul\":4732:4740   */\n      lt\n        /* \"#utility.yul\":4729:4763   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":4743:4761   */\n      tag_219\n      tag_203\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4729:4763   */\n    tag_218:\n        /* \"#utility.yul\":4788:4789   */\n      dup3\n        /* \"#utility.yul\":4785:4786   */\n      dup3\n        /* \"#utility.yul\":4781:4790   */\n      sub\n        /* \"#utility.yul\":4773:4790   */\n      swap1\n      pop\n        /* \"#utility.yul\":4605:4796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4802:4898   */\n    tag_171:\n        /* \"#utility.yul\":4839:4846   */\n      0x00\n        /* \"#utility.yul\":4868:4892   */\n      tag_221\n        /* \"#utility.yul\":4886:4891   */\n      dup3\n        /* \"#utility.yul\":4868:4892   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4857:4892   */\n      swap1\n      pop\n        /* \"#utility.yul\":4802:4898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4904:4994   */\n    tag_223:\n        /* \"#utility.yul\":4938:4945   */\n      0x00\n        /* \"#utility.yul\":4981:4986   */\n      dup2\n        /* \"#utility.yul\":4974:4987   */\n      iszero\n        /* \"#utility.yul\":4967:4988   */\n      iszero\n        /* \"#utility.yul\":4956:4988   */\n      swap1\n      pop\n        /* \"#utility.yul\":4904:4994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5000:5126   */\n    tag_222:\n        /* \"#utility.yul\":5037:5044   */\n      0x00\n        /* \"#utility.yul\":5077:5119   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5070:5075   */\n      dup3\n        /* \"#utility.yul\":5066:5120   */\n      and\n        /* \"#utility.yul\":5055:5120   */\n      swap1\n      pop\n        /* \"#utility.yul\":5000:5126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5132:5209   */\n    tag_185:\n        /* \"#utility.yul\":5169:5176   */\n      0x00\n        /* \"#utility.yul\":5198:5203   */\n      dup2\n        /* \"#utility.yul\":5187:5203   */\n      swap1\n      pop\n        /* \"#utility.yul\":5132:5209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5215:5355   */\n    tag_175:\n        /* \"#utility.yul\":5279:5288   */\n      0x00\n        /* \"#utility.yul\":5312:5349   */\n      tag_228\n        /* \"#utility.yul\":5343:5348   */\n      dup3\n        /* \"#utility.yul\":5312:5349   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5299:5349   */\n      swap1\n      pop\n        /* \"#utility.yul\":5215:5355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5361:5487   */\n    tag_229:\n        /* \"#utility.yul\":5411:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5481   */\n      tag_231\n        /* \"#utility.yul\":5475:5480   */\n      dup3\n        /* \"#utility.yul\":5444:5481   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5431:5481   */\n      swap1\n      pop\n        /* \"#utility.yul\":5361:5487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5606   */\n    tag_232:\n        /* \"#utility.yul\":5543:5552   */\n      0x00\n        /* \"#utility.yul\":5576:5600   */\n      tag_234\n        /* \"#utility.yul\":5594:5599   */\n      dup3\n        /* \"#utility.yul\":5576:5600   */\n      tag_222\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5563:5600   */\n      swap1\n      pop\n        /* \"#utility.yul\":5493:5606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5612:5792   */\n    tag_203:\n        /* \"#utility.yul\":5660:5737   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5657:5658   */\n      0x00\n        /* \"#utility.yul\":5650:5738   */\n      mstore\n        /* \"#utility.yul\":5757:5761   */\n      0x11\n        /* \"#utility.yul\":5754:5755   */\n      0x04\n        /* \"#utility.yul\":5747:5762   */\n      mstore\n        /* \"#utility.yul\":5781:5785   */\n      0x24\n        /* \"#utility.yul\":5778:5779   */\n      0x00\n        /* \"#utility.yul\":5771:5786   */\n      revert\n        /* \"#utility.yul\":5798:5978   */\n    tag_209:\n        /* \"#utility.yul\":5846:5923   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5843:5844   */\n      0x00\n        /* \"#utility.yul\":5836:5924   */\n      mstore\n        /* \"#utility.yul\":5943:5947   */\n      0x12\n        /* \"#utility.yul\":5940:5941   */\n      0x04\n        /* \"#utility.yul\":5933:5948   */\n      mstore\n        /* \"#utility.yul\":5967:5971   */\n      0x24\n        /* \"#utility.yul\":5964:5965   */\n      0x00\n        /* \"#utility.yul\":5957:5972   */\n      revert\n        /* \"#utility.yul\":6107:6224   */\n    tag_158:\n        /* \"#utility.yul\":6216:6217   */\n      0x00\n        /* \"#utility.yul\":6213:6214   */\n      dup1\n        /* \"#utility.yul\":6206:6218   */\n      revert\n        /* \"#utility.yul\":6230:6411   */\n    tag_181:\n        /* \"#utility.yul\":6370:6403   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6366:6367   */\n      0x00\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6354:6368   */\n      add\n        /* \"#utility.yul\":6347:6404   */\n      mstore\n        /* \"#utility.yul\":6230:6411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6539   */\n    tag_146:\n        /* \"#utility.yul\":6490:6514   */\n      tag_242\n        /* \"#utility.yul\":6508:6513   */\n      dup2\n        /* \"#utility.yul\":6490:6514   */\n      tag_171\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6483:6488   */\n      dup2\n        /* \"#utility.yul\":6480:6515   */\n      eq\n        /* \"#utility.yul\":6470:6533   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6526:6527   */\n      dup1\n        /* \"#utility.yul\":6519:6531   */\n      revert\n        /* \"#utility.yul\":6470:6533   */\n    tag_243:\n        /* \"#utility.yul\":6417:6539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6545:6661   */\n    tag_150:\n        /* \"#utility.yul\":6615:6636   */\n      tag_245\n        /* \"#utility.yul\":6630:6635   */\n      dup2\n        /* \"#utility.yul\":6615:6636   */\n      tag_223\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6608:6613   */\n      dup2\n        /* \"#utility.yul\":6605:6637   */\n      eq\n        /* \"#utility.yul\":6595:6655   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6651:6652   */\n      0x00\n        /* \"#utility.yul\":6648:6649   */\n      dup1\n        /* \"#utility.yul\":6641:6653   */\n      revert\n        /* \"#utility.yul\":6595:6655   */\n    tag_246:\n        /* \"#utility.yul\":6545:6661   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:6789   */\n    tag_154:\n        /* \"#utility.yul\":6740:6764   */\n      tag_248\n        /* \"#utility.yul\":6758:6763   */\n      dup2\n        /* \"#utility.yul\":6740:6764   */\n      tag_185\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6733:6738   */\n      dup2\n        /* \"#utility.yul\":6730:6765   */\n      eq\n        /* \"#utility.yul\":6720:6783   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":6779:6780   */\n      0x00\n        /* \"#utility.yul\":6776:6777   */\n      dup1\n        /* \"#utility.yul\":6769:6781   */\n      revert\n        /* \"#utility.yul\":6720:6783   */\n    tag_249:\n        /* \"#utility.yul\":6667:6789   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7eaf90ddf87dd05fe5944261ba5a848df5b4f2190e4794c9da8f339303d4db164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:3"
															},
															"nodeType": "YulIf",
															"src": "260:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:3",
														"type": ""
													}
												],
												"src": "156:507:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:3",
														"type": ""
													}
												],
												"src": "669:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:3",
														"type": ""
													}
												],
												"src": "750:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:3",
														"type": ""
													}
												],
												"src": "852:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:3"
															},
															"nodeType": "YulIf",
															"src": "1283:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:3",
														"type": ""
													}
												],
												"src": "1230:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620012b0380380620012b08339818101604052810190620000379190620000e0565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017a565b600081519050620000da8162000160565b92915050565b60008060408385031215620000fa57620000f96200015b565b5b60006200010a85828601620000c9565b92505060206200011d85828601620000c9565b9150509250929050565b600062000134826200013b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200016b8162000127565b81146200017757600080fd5b50565b611126806200018a6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d25565b6102d4565b6040516101159190610e60565b60405180910390f35b6101266103d6565b6040516101339190610e25565b60405180910390f35b61015660048036038101906101519190610d7f565b6103fc565b005b610160610656565b60405161016d9190610e60565b60405180910390f35b610190600480360381019061018b9190610d25565b61065c565b60405161019d9190610e60565b60405180910390f35b6101ae6106a5565b6040516101bb9190610e60565b60405180910390f35b6101cc6106aa565b6040516101d99190610e60565b60405180910390f35b6101fc60048036038101906101f79190610d7f565b6106b0565b005b61021860048036038101906102139190610d25565b610947565b6040516102259190610e60565b60405180910390f35b61023661095f565b6040516102439190610e25565b60405180910390f35b610254610985565b005b610270600480360381019061026b9190610d25565b610bf9565b60405161027d9190610e60565b60405180910390f35b61028e610c11565b60405161029b9190610e60565b60405180910390f35b6102be60048036038101906102b99190610d25565b610c74565b6040516102cb9190610e60565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610c11565b6103719190610f6d565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610f13565b6103c59190610ee2565b6103cf9190610e8c565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610404610c8c565b3361040d610c11565b60048190555042600381905550610423816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600760008282546104be9190610f6d565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105149190610f6d565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167ffaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf460405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016105be929190610dfc565b602060405180830381600087803b1580156105d857600080fd5b505af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610d52565b905080610649576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610653610cdc565b50565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106b9610c11565b600481905550426003819055506106cf816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610760610c8c565b81600081141561079c576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600760008282546107ae9190610e8c565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108049190610e8c565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30866040518363ffffffff1660e01b81526004016108ae929190610dfc565b602060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190610d52565b905080610939576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610943610cdc565b5050565b60086020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61098d610c8c565b33610996610c11565b600481905550426003819055506109ac816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b61929190610dfc565b602060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190610d52565b905080610bec576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050610bf7610cdc565b565b60066020528060005260406000206000915090505481565b6000806007541415610c27576004549050610c71565b600754670de0b6b3a7640000606460035442610c439190610f6d565b610c4d9190610f13565b610c579190610f13565b610c619190610ee2565b600454610c6e9190610e8c565b90505b90565b60056020528060005260406000206000915090505481565b60026000541415610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc990610e40565b60405180910390fd5b6002600081905550565b6001600081905550565b600081359050610cf5816110ab565b92915050565b600081519050610d0a816110c2565b92915050565b600081359050610d1f816110d9565b92915050565b600060208284031215610d3b57610d3a61107d565b5b6000610d4984828501610ce6565b91505092915050565b600060208284031215610d6857610d6761107d565b5b6000610d7684828501610cfb565b91505092915050565b600060208284031215610d9557610d9461107d565b5b6000610da384828501610d10565b91505092915050565b610db581610fa1565b82525050565b610dc481610fe9565b82525050565b6000610dd7601f83610e7b565b9150610de282611082565b602082019050919050565b610df681610fdf565b82525050565b6000604082019050610e116000830185610dac565b610e1e6020830184610ded565b9392505050565b6000602082019050610e3a6000830184610dbb565b92915050565b60006020820190508181036000830152610e5981610dca565b9050919050565b6000602082019050610e756000830184610ded565b92915050565b600082825260208201905092915050565b6000610e9782610fdf565b9150610ea283610fdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed757610ed661101f565b5b828201905092915050565b6000610eed82610fdf565b9150610ef883610fdf565b925082610f0857610f0761104e565b5b828204905092915050565b6000610f1e82610fdf565b9150610f2983610fdf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6257610f6161101f565b5b828202905092915050565b6000610f7882610fdf565b9150610f8383610fdf565b925082821015610f9657610f9561101f565b5b828203905092915050565b6000610fac82610fbf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ff482610ffb565b9050919050565b60006110068261100d565b9050919050565b600061101882610fbf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6110b481610fa1565b81146110bf57600080fd5b50565b6110cb81610fb3565b81146110d657600080fd5b50565b6110e281610fdf565b81146110ed57600080fd5b5056fea2646970667358221220f7eaf90ddf87dd05fe5944261ba5a848df5b4f2190e4794c9da8f339303d4db164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12B0 CODESIZE SUB DUP1 PUSH3 0x12B0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x17A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xDA DUP2 PUSH3 0x160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xFA JUMPI PUSH3 0xF9 PUSH3 0x15B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10A DUP6 DUP3 DUP7 ADD PUSH3 0xC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x11D DUP6 DUP3 DUP7 ADD PUSH3 0xC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x134 DUP3 PUSH3 0x13B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16B DUP2 PUSH3 0x127 JUMP JUMPDEST DUP2 EQ PUSH3 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1126 DUP1 PUSH3 0x18A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0x985 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xC8C JUMP JUMPDEST CALLER PUSH2 0x40D PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x423 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x653 PUSH2 0xCDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6B9 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x6CF DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x760 PUSH2 0xC8C JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x943 PUSH2 0xCDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x98D PUSH2 0xC8C JUMP JUMPDEST CALLER PUSH2 0x996 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x9AC DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0xBF7 PUSH2 0xCDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xC27 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xC61 SWAP2 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF5 DUP2 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD1F DUP2 PUSH2 0x10D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD49 DUP5 DUP3 DUP6 ADD PUSH2 0xCE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD76 DUP5 DUP3 DUP6 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH2 0xD94 PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA3 DUP5 DUP3 DUP6 ADD PUSH2 0xD10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB5 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD7 PUSH1 0x1F DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0xDE2 DUP3 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xE1E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE59 DUP2 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE97 DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xEA2 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0x104E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1E DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xF29 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xF83 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAC DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF4 DUP3 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 DUP3 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0xFB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E2 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP2 EQ PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEA 0xF9 0xD 0xDF DUP8 0xDD SDIV INVALID MSIZE DIFFICULTY 0x26 SHL 0xA5 0xA8 BASEFEE 0xDF JUMPDEST 0x4F 0x21 SWAP1 0xE4 PUSH26 0x4C9DA8F339303D4DB164736F6C63430008070033000000000000 ",
							"sourceMap": "237:3033:2:-:0;;;934:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;1022:12:2;1000:14;;:35;;;;;;;;;;;;;;;;;;1068:12;1046:14;;:35;;;;;;;;;;;;;;;;;;934:155;;237:3033;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;237:3033:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_RATE_150": {
									"entryPoint": 1701,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 3292,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 3212,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_404": {
									"entryPoint": 2437,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_263": {
									"entryPoint": 724,
									"id": 263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStaked_460": {
									"entryPoint": 1628,
									"id": 460,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardPerToken_235": {
									"entryPoint": 3089,
									"id": 235,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@s_balances_168": {
									"entryPoint": 2375,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_lastUpdateTime_152": {
									"entryPoint": 1706,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardPerTokenStored_154": {
									"entryPoint": 1622,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardsToken_147": {
									"entryPoint": 982,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewards_162": {
									"entryPoint": 3065,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakingToken_144": {
									"entryPoint": 2399,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_userRewardPerTokenPaid_158": {
									"entryPoint": 3188,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_313": {
									"entryPoint": 1712,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_358": {
									"entryPoint": 1020,
									"id": 358,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$131_to_t_address": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6792:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:3"
															},
															"nodeType": "YulIf",
															"src": "516:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:3",
														"type": ""
													}
												],
												"src": "440:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "895:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "897:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "897:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "870:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "879:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "862:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:32:3"
															},
															"nodeType": "YulIf",
															"src": "859:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "988:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1003:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1017:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1007:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1032:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1075:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1086:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1071:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1071:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1095:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1042:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "819:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "830:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "842:6:3",
														"type": ""
													}
												],
												"src": "775:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1192:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1240:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1213:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:3"
															},
															"nodeType": "YulIf",
															"src": "1202:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1331:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1346:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1350:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1375:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1410:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1406:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1430:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1385:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1375:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1162:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1173:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1185:6:3",
														"type": ""
													}
												],
												"src": "1126:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1543:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1566:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1548:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1514:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"src": "1461:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1731:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$131_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1686:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1686:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1652:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1659:3:3",
														"type": ""
													}
												],
												"src": "1585:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1896:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1906:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1972:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1913:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2078:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "1989:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2091:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2102:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2091:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1884:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1892:3:3",
														"type": ""
													}
												],
												"src": "1750:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2187:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2227:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2209:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2175:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2182:3:3",
														"type": ""
													}
												],
												"src": "2122:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2382:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2394:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2382:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2462:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2486:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2471:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2471:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2543:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2567:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2499:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2499:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2336:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2348:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2356:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2367:4:3",
														"type": ""
													}
												],
												"src": "2246:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2696:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2706:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2718:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2714:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2800:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2742:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2742:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2668:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2680:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2691:4:3",
														"type": ""
													}
												],
												"src": "2584:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3021:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3033:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3044:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3021:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3068:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3079:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3087:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3093:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3057:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3247:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3121:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3113:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2991:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:3",
														"type": ""
													}
												],
												"src": "2840:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3363:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3373:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3385:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3373:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3453:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3466:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3477:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3462:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3462:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3409:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3335:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3347:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3358:4:3",
														"type": ""
													}
												],
												"src": "3265:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3533:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3543:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3559:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3553:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3526:6:3",
														"type": ""
													}
												],
												"src": "3493:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3670:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3687:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3692:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3680:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3708:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3727:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3732:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3708:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3642:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3647:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3658:11:3",
														"type": ""
													}
												],
												"src": "3574:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3793:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3803:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3826:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3808:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3803:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3837:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3860:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3842:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3837:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4000:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4002:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4002:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4002:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3921:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3928:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3996:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3918:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:81:3"
															},
															"nodeType": "YulIf",
															"src": "3915:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4032:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4043:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4046:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4039:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4032:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3780:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3783:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3789:3:3",
														"type": ""
													}
												],
												"src": "3749:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4102:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4112:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4135:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4117:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4112:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4146:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4169:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4151:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4146:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4193:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4195:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4195:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4195:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4190:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4183:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:9:3"
															},
															"nodeType": "YulIf",
															"src": "4180:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4225:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4234:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4237:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4225:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4091:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4094:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4100:1:3",
														"type": ""
													}
												],
												"src": "4060:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4299:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4309:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4332:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4314:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4309:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4343:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4366:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4348:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4343:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4541:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4543:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4543:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4543:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4453:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4446:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4439:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4439:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4461:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4468:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4536:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4464:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4464:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4458:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:105:3"
															},
															"nodeType": "YulIf",
															"src": "4432:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4573:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4591:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4573:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4282:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4285:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4291:7:3",
														"type": ""
													}
												],
												"src": "4251:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4650:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4660:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4683:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4665:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4660:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4694:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4717:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4699:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4694:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4741:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4743:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4743:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4743:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4735:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4738:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4732:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4732:8:3"
															},
															"nodeType": "YulIf",
															"src": "4729:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4773:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4785:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4788:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4773:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4636:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4639:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4645:4:3",
														"type": ""
													}
												],
												"src": "4605:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4847:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4857:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4886:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4868:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4857:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4829:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4839:7:3",
														"type": ""
													}
												],
												"src": "4802:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4946:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4956:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4981:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4974:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4956:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4928:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4938:7:3",
														"type": ""
													}
												],
												"src": "4904:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5045:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5055:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5070:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5077:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5066:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5055:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5027:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5037:7:3",
														"type": ""
													}
												],
												"src": "5000:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5177:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5187:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5198:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5187:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5159:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5169:7:3",
														"type": ""
													}
												],
												"src": "5132:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5289:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5299:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5343:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5312:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5299:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$131_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5269:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5279:9:3",
														"type": ""
													}
												],
												"src": "5215:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5421:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5431:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5475:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5444:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5431:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5401:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5411:9:3",
														"type": ""
													}
												],
												"src": "5361:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5594:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5543:9:3",
														"type": ""
													}
												],
												"src": "5493:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5657:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5660:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5650:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5754:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5757:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5771:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5771:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5612:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5826:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5843:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5846:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5836:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5836:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5943:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5933:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5933:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5933:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5964:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5967:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5798:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6073:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6083:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5984:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6196:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6216:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6206:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6107:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6336:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6366:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6354:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6354:14:3"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6370:33:3",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6347:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6328:6:3",
														"type": ""
													}
												],
												"src": "6230:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:43:3"
															},
															"nodeType": "YulIf",
															"src": "6470:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6453:5:3",
														"type": ""
													}
												],
												"src": "6417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6585:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6639:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6648:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6651:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6641:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6641:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6641:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6608:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6630:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6615:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6615:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6605:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6605:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:40:3"
															},
															"nodeType": "YulIf",
															"src": "6595:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6578:5:3",
														"type": ""
													}
												],
												"src": "6545:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6767:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6776:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6779:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6769:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6769:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6769:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6733:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6758:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6740:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6740:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6730:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6730:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:43:3"
															},
															"nodeType": "YulIf",
															"src": "6720:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6703:5:3",
														"type": ""
													}
												],
												"src": "6667:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$131_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$131_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d25565b6102d4565b6040516101159190610e60565b60405180910390f35b6101266103d6565b6040516101339190610e25565b60405180910390f35b61015660048036038101906101519190610d7f565b6103fc565b005b610160610656565b60405161016d9190610e60565b60405180910390f35b610190600480360381019061018b9190610d25565b61065c565b60405161019d9190610e60565b60405180910390f35b6101ae6106a5565b6040516101bb9190610e60565b60405180910390f35b6101cc6106aa565b6040516101d99190610e60565b60405180910390f35b6101fc60048036038101906101f79190610d7f565b6106b0565b005b61021860048036038101906102139190610d25565b610947565b6040516102259190610e60565b60405180910390f35b61023661095f565b6040516102439190610e25565b60405180910390f35b610254610985565b005b610270600480360381019061026b9190610d25565b610bf9565b60405161027d9190610e60565b60405180910390f35b61028e610c11565b60405161029b9190610e60565b60405180910390f35b6102be60048036038101906102b99190610d25565b610c74565b6040516102cb9190610e60565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610c11565b6103719190610f6d565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610f13565b6103c59190610ee2565b6103cf9190610e8c565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610404610c8c565b3361040d610c11565b60048190555042600381905550610423816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600760008282546104be9190610f6d565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105149190610f6d565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167ffaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf460405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016105be929190610dfc565b602060405180830381600087803b1580156105d857600080fd5b505af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610d52565b905080610649576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610653610cdc565b50565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106b9610c11565b600481905550426003819055506106cf816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610760610c8c565b81600081141561079c576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600760008282546107ae9190610e8c565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108049190610e8c565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30866040518363ffffffff1660e01b81526004016108ae929190610dfc565b602060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190610d52565b905080610939576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610943610cdc565b5050565b60086020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61098d610c8c565b33610996610c11565b600481905550426003819055506109ac816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b61929190610dfc565b602060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190610d52565b905080610bec576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050610bf7610cdc565b565b60066020528060005260406000206000915090505481565b6000806007541415610c27576004549050610c71565b600754670de0b6b3a7640000606460035442610c439190610f6d565b610c4d9190610f13565b610c579190610f13565b610c619190610ee2565b600454610c6e9190610e8c565b90505b90565b60056020528060005260406000206000915090505481565b60026000541415610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc990610e40565b60405180910390fd5b6002600081905550565b6001600081905550565b600081359050610cf5816110ab565b92915050565b600081519050610d0a816110c2565b92915050565b600081359050610d1f816110d9565b92915050565b600060208284031215610d3b57610d3a61107d565b5b6000610d4984828501610ce6565b91505092915050565b600060208284031215610d6857610d6761107d565b5b6000610d7684828501610cfb565b91505092915050565b600060208284031215610d9557610d9461107d565b5b6000610da384828501610d10565b91505092915050565b610db581610fa1565b82525050565b610dc481610fe9565b82525050565b6000610dd7601f83610e7b565b9150610de282611082565b602082019050919050565b610df681610fdf565b82525050565b6000604082019050610e116000830185610dac565b610e1e6020830184610ded565b9392505050565b6000602082019050610e3a6000830184610dbb565b92915050565b60006020820190508181036000830152610e5981610dca565b9050919050565b6000602082019050610e756000830184610ded565b92915050565b600082825260208201905092915050565b6000610e9782610fdf565b9150610ea283610fdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed757610ed661101f565b5b828201905092915050565b6000610eed82610fdf565b9150610ef883610fdf565b925082610f0857610f0761104e565b5b828204905092915050565b6000610f1e82610fdf565b9150610f2983610fdf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6257610f6161101f565b5b828202905092915050565b6000610f7882610fdf565b9150610f8383610fdf565b925082821015610f9657610f9561101f565b5b828203905092915050565b6000610fac82610fbf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ff482610ffb565b9050919050565b60006110068261100d565b9050919050565b600061101882610fbf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6110b481610fa1565b81146110bf57600080fd5b50565b6110cb81610fb3565b81146110d657600080fd5b50565b6110e281610fdf565b81146110ed57600080fd5b5056fea2646970667358221220f7eaf90ddf87dd05fe5944261ba5a848df5b4f2190e4794c9da8f339303d4db164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0x985 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xC8C JUMP JUMPDEST CALLER PUSH2 0x40D PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x423 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x653 PUSH2 0xCDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6B9 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x6CF DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x760 PUSH2 0xC8C JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x943 PUSH2 0xCDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x98D PUSH2 0xC8C JUMP JUMPDEST CALLER PUSH2 0x996 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x9AC DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP3 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0xBF7 PUSH2 0xCDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xC27 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xC61 SWAP2 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF5 DUP2 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD1F DUP2 PUSH2 0x10D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD49 DUP5 DUP3 DUP6 ADD PUSH2 0xCE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD76 DUP5 DUP3 DUP6 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH2 0xD94 PUSH2 0x107D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA3 DUP5 DUP3 DUP6 ADD PUSH2 0xD10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB5 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xFE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD7 PUSH1 0x1F DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0xDE2 DUP3 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xE1E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE59 DUP2 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE97 DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xEA2 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0x104E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1E DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xF29 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 DUP3 PUSH2 0xFDF JUMP JUMPDEST SWAP2 POP PUSH2 0xF83 DUP4 PUSH2 0xFDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAC DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF4 DUP3 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 DUP3 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0xFB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E2 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP2 EQ PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEA 0xF9 0xD 0xDF DUP8 0xDD SDIV INVALID MSIZE DIFFICULTY 0x26 SHL 0xA5 0xA8 BASEFEE 0xDF JUMPDEST 0x4F 0x21 SWAP1 0xE4 PUSH26 0x4C9DA8F339303D4DB164736F6C63430008070033000000000000 ",
							"sourceMap": "237:3033:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2007:347;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;476:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3132:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:361;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;279:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2362:345;;;:::i;:::-;;586:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1176:260;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1444:186;1497:7;1604:9;:18;1614:7;1604:18;;;;;;;;;;;;;;;;1598:4;1562:24;:33;1587:7;1562:33;;;;;;;;;;;;;;;;1545:16;:14;:16::i;:::-;:50;;;;:::i;:::-;1524:10;:19;1535:7;1524:19;;;;;;;;;;;;;;;;:72;;;;:::i;:::-;1523:79;;;;:::i;:::-;1522:100;;;;:::i;:::-;1516:106;;1444:186;;;:::o;314:28::-;;;;;;;;;;;;;:::o;2007:347::-;2261:21:0;:19;:21::i;:::-;2076:10:2::1;2793:16;:14;:16::i;:::-;2770:22;:39;;;;2839:15;2820:16;:34;;;;2885:15;2892:7;2885:6;:15::i;:::-;2865:9;:18;2875:7;2865:18;;;;;;;;;;;;;;;:35;;;;2945:22;;2911:24;:33;2936:7;2911:33;;;;;;;;;;;;;;;:56;;;;2113:6:::2;2098:13;;:21;;;;;;;:::i;:::-;;;;;;;;2154:6;2130:10;:22;2141:10;2130:22;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2201:6;2190:10;2176:32;;;;;;;;;;;;2219:12;2232:14;;;;;;;;;;;:23;;;2256:10;2267:6;2232:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2219:55;;2289:7;2285:62;;2319:16;;;;;;;;;;;;;;2285:62;2087:267;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;2007:347:2;:::o;476:37::-;;;;:::o;3132:115::-;3188:7;3220:10;:19;3231:7;3220:19;;;;;;;;;;;;;;;;3213:26;;3132:115;;;:::o;392:39::-;428:3;392:39;:::o;438:31::-;;;;:::o;1638:361::-;1690:10;2793:16;:14;:16::i;:::-;2770:22;:39;;;;2839:15;2820:16;:34;;;;2885:15;2892:7;2885:6;:15::i;:::-;2865:9;:18;2875:7;2865:18;;;;;;;;;;;;;;;:35;;;;2945:22;;2911:24;:33;2936:7;2911:33;;;;;;;;;;;;;;;:56;;;;2261:21:0::1;:19;:21::i;:::-;1728:6:2::2;3052:1;3044:6;:9;3041:66;;;3076:19;;;;;;;;;;;;;;3041:66;1762:6:::3;1747:13;;:21;;;;;;;:::i;:::-;;;;;;;;1803:6;1779:10;:22;1790:10;1779:22;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1843:6;1832:10;1825:25;;;;;;;;;;;;1861:12;1874:14;;;;;;;;;;;:23;;;1906:4;1912:6;1874:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1861:58;;1934:7;1930:62;;1964:16;;;;;;;;;;;;;;1930:62;1736:263;2292:1:0::2;2303:20:::1;:18;:20::i;:::-;1638:361:2::0;;:::o;673:43::-;;;;;;;;;;;;;;;;;:::o;279:28::-;;;;;;;;;;;;;:::o;2362:345::-;2261:21:0;:19;:21::i;:::-;2420:10:2::1;2793:16;:14;:16::i;:::-;2770:22;:39;;;;2839:15;2820:16;:34;;;;2885:15;2892:7;2885:6;:15::i;:::-;2865:9;:18;2875:7;2865:18;;;;;;;;;;;;;;;:35;;;;2945:22;;2911:24;:33;2936:7;2911:33;;;;;;;;;;;;;;;:56;;;;2442:14:::2;2457:9;:21;2467:10;2457:21;;;;;;;;;;;;;;;;2442:36;;2511:1;2489:9;:21;2499:10;2489:21;;;;;;;;;;;;;;;:23;;;;2554:6;2543:10;2528:33;;;;;;;;;;;;2572:12;2585:14;;;;;;;;;;;:23;;;2609:10;2620:6;2585:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2572:55;;2642:7;2638:62;;2672:16;;;;;;;;;;;;;;2638:62;2431:276;;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;2362:345:2:o;586:42::-;;;;;;;;;;;;;;;;;:::o;1176:260::-;1222:7;1259:1;1244:13;;:16;1241:76;;;1283:22;;1276:29;;;;1241:76;1414:13;;1408:4;428:3;1378:16;;1362:15;:32;;;;:::i;:::-;1361:46;;;;:::i;:::-;:51;;;;:::i;:::-;1360:67;;;;:::i;:::-;1336:22;;:92;;;;:::i;:::-;1329:99;;1176:260;;:::o;522:57::-;;;;;;;;;;;;;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:345::-;842:6;891:2;879:9;870:7;866:23;862:32;859:119;;;897:79;;:::i;:::-;859:119;1017:1;1042:61;1095:7;1086:6;1075:9;1071:22;1042:61;:::i;:::-;1032:71;;988:125;775:345;;;;:::o;1126:329::-;1185:6;1234:2;1222:9;1213:7;1209:23;1205:32;1202:119;;;1240:79;;:::i;:::-;1202:119;1360:1;1385:53;1430:7;1421:6;1410:9;1406:22;1385:53;:::i;:::-;1375:63;;1331:117;1126:329;;;;:::o;1461:118::-;1548:24;1566:5;1548:24;:::i;:::-;1543:3;1536:37;1461:118;;:::o;1585:159::-;1686:51;1731:5;1686:51;:::i;:::-;1681:3;1674:64;1585:159;;:::o;1750:366::-;1892:3;1913:67;1977:2;1972:3;1913:67;:::i;:::-;1906:74;;1989:93;2078:3;1989:93;:::i;:::-;2107:2;2102:3;2098:12;2091:19;;1750:366;;;:::o;2122:118::-;2209:24;2227:5;2209:24;:::i;:::-;2204:3;2197:37;2122:118;;:::o;2246:332::-;2367:4;2405:2;2394:9;2390:18;2382:26;;2418:71;2486:1;2475:9;2471:17;2462:6;2418:71;:::i;:::-;2499:72;2567:2;2556:9;2552:18;2543:6;2499:72;:::i;:::-;2246:332;;;;;:::o;2584:250::-;2691:4;2729:2;2718:9;2714:18;2706:26;;2742:85;2824:1;2813:9;2809:17;2800:6;2742:85;:::i;:::-;2584:250;;;;:::o;2840:419::-;3006:4;3044:2;3033:9;3029:18;3021:26;;3093:9;3087:4;3083:20;3079:1;3068:9;3064:17;3057:47;3121:131;3247:4;3121:131;:::i;:::-;3113:139;;2840:419;;;:::o;3265:222::-;3358:4;3396:2;3385:9;3381:18;3373:26;;3409:71;3477:1;3466:9;3462:17;3453:6;3409:71;:::i;:::-;3265:222;;;;:::o;3574:169::-;3658:11;3692:6;3687:3;3680:19;3732:4;3727:3;3723:14;3708:29;;3574:169;;;;:::o;3749:305::-;3789:3;3808:20;3826:1;3808:20;:::i;:::-;3803:25;;3842:20;3860:1;3842:20;:::i;:::-;3837:25;;3996:1;3928:66;3924:74;3921:1;3918:81;3915:107;;;4002:18;;:::i;:::-;3915:107;4046:1;4043;4039:9;4032:16;;3749:305;;;;:::o;4060:185::-;4100:1;4117:20;4135:1;4117:20;:::i;:::-;4112:25;;4151:20;4169:1;4151:20;:::i;:::-;4146:25;;4190:1;4180:35;;4195:18;;:::i;:::-;4180:35;4237:1;4234;4230:9;4225:14;;4060:185;;;;:::o;4251:348::-;4291:7;4314:20;4332:1;4314:20;:::i;:::-;4309:25;;4348:20;4366:1;4348:20;:::i;:::-;4343:25;;4536:1;4468:66;4464:74;4461:1;4458:81;4453:1;4446:9;4439:17;4435:105;4432:131;;;4543:18;;:::i;:::-;4432:131;4591:1;4588;4584:9;4573:20;;4251:348;;;;:::o;4605:191::-;4645:4;4665:20;4683:1;4665:20;:::i;:::-;4660:25;;4699:20;4717:1;4699:20;:::i;:::-;4694:25;;4738:1;4735;4732:8;4729:34;;;4743:18;;:::i;:::-;4729:34;4788:1;4785;4781:9;4773:17;;4605:191;;;;:::o;4802:96::-;4839:7;4868:24;4886:5;4868:24;:::i;:::-;4857:35;;4802:96;;;:::o;4904:90::-;4938:7;4981:5;4974:13;4967:21;4956:32;;4904:90;;;:::o;5000:126::-;5037:7;5077:42;5070:5;5066:54;5055:65;;5000:126;;;:::o;5132:77::-;5169:7;5198:5;5187:16;;5132:77;;;:::o;5215:140::-;5279:9;5312:37;5343:5;5312:37;:::i;:::-;5299:50;;5215:140;;;:::o;5361:126::-;5411:9;5444:37;5475:5;5444:37;:::i;:::-;5431:50;;5361:126;;;:::o;5493:113::-;5543:9;5576:24;5594:5;5576:24;:::i;:::-;5563:37;;5493:113;;;:::o;5612:180::-;5660:77;5657:1;5650:88;5757:4;5754:1;5747:15;5781:4;5778:1;5771:15;5798:180;5846:77;5843:1;5836:88;5943:4;5940:1;5933:15;5967:4;5964:1;5957:15;6107:117;6216:1;6213;6206:12;6230:181;6370:33;6366:1;6358:6;6354:14;6347:57;6230:181;:::o;6417:122::-;6490:24;6508:5;6490:24;:::i;:::-;6483:5;6480:35;6470:63;;6529:1;6526;6519:12;6470:63;6417:122;:::o;6545:116::-;6615:21;6630:5;6615:21;:::i;:::-;6608:5;6605:32;6595:60;;6651:1;6648;6641:12;6595:60;6545:116;:::o;6667:122::-;6740:24;6758:5;6740:24;:::i;:::-;6733:5;6730:35;6720:63;;6779:1;6776;6769:12;6720:63;6667:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "878000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_RATE()": "396",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"getStaked(address)": "2886",
								"rewardPerToken()": "infinite",
								"s_balances(address)": "2859",
								"s_lastUpdateTime()": "2518",
								"s_rewardPerTokenStored()": "2452",
								"s_rewards(address)": "2858",
								"s_rewardsToken()": "2646",
								"s_stakingToken()": "2667",
								"s_userRewardPerTokenPaid(address)": "2902",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1035,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1068,
									"end": 1080,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1060,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1046,
									"end": 1060,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 934,
									"end": 1089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 3270,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7eaf90ddf87dd05fe5944261ba5a848df5b4f2190e4794c9da8f339303d4db164736f6c63430008070033",
									".code": [
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "BEA08151"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "CD3DAF9D"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "F245ACE4"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "AB32EB69"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "ADCA9B72"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "399080EC"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "5997BB37"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "6AA0838F"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "8CC262"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "BD21C56"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 3270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1595,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1545,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1524,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1523,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1522,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 314,
											"end": 342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 314,
											"end": 342,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2793,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2854,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2098,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2140,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2200,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "FAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4"
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2255,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2256,
											"end": 2266,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2285,
											"end": 2347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2285,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2354,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 513,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 513,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3188,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 392,
											"end": 431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 431,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 438,
											"end": 469,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 469,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1700,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2793,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2854,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1734,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "F45911F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1800,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1874,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1930,
											"end": 1992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1930,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1999,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 279,
											"end": 307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 279,
											"end": 307,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2793,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2854,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2944,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2477,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2478,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2509,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2510,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2560,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH",
											"source": 2,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2608,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2608,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2626,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2638,
											"end": 2700,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2688,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2638,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2707,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 628,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1257,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1244,
											"end": 1257,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1260,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1241,
											"end": 1317,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1305,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1317,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1241,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1427,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1414,
											"end": 1427,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 428,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1378,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1378,
											"end": 1394,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1377,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1361,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1360,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1336,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 579,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1977,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2418,
											"end": 2489,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2489,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2418,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2499,
											"end": 2571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2571,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2499,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2578,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2806,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2742,
											"end": 2827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2827,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2742,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3103,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3121,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3121,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 3259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3459,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3487,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3743,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3808,
											"end": 3828,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3828,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3808,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3998,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3999,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 4022,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3915,
											"end": 4022,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 4022,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3915,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 4054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4117,
											"end": 4137,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4117,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4117,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4137,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4171,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4180,
											"end": 4215,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4215,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4180,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4245,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4314,
											"end": 4334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4334,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4314,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4366,
											"end": 4367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4368,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4534,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4464,
											"end": 4538,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4539,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4439,
											"end": 4456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4540,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4563,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4432,
											"end": 4563,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4563,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4432,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4593,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4599,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4699,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4719,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4740,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4790,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4796,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4886,
											"end": 4891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4898,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 4986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 4987,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4988,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 4988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 4988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4994,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5119,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5126,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5209,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5355,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5487,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 5594,
											"end": 5599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5576,
											"end": 5600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5600,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 5576,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5612,
											"end": 5792,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5612,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5660,
											"end": 5737,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5657,
											"end": 5658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5757,
											"end": 5761,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5747,
											"end": 5762,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5786,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5798,
											"end": 5978,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5798,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5846,
											"end": 5923,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5843,
											"end": 5844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5947,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5933,
											"end": 5948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5972,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6107,
											"end": 6224,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6107,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6411,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6230,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6403,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6404,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6411,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6545,
											"end": 6661,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6545,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6630,
											"end": 6635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6637,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6595,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6595,
											"end": 6655,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6653,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6595,
											"end": 6655,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6595,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6661,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6667,
											"end": 6789,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6667,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6740,
											"end": 6764,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6740,
											"end": 6764,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6740,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6733,
											"end": 6738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6765,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6720,
											"end": 6783,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6769,
											"end": 6781,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 6783,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6720,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6789,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"REWARD_RATE()": "5997bb37",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"getStaked(address)": "399080ec",
							"rewardPerToken()": "cd3daf9d",
							"s_balances(address)": "ab32eb69",
							"s_lastUpdateTime()": "6aa0838f",
							"s_rewardPerTokenStored()": "304ac91b",
							"s_rewards(address)": "bea08151",
							"s_rewardsToken()": "0bd21c56",
							"s_stakingToken()": "adca9b72",
							"s_userRewardPerTokenPaid(address)": "f245ace4",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrewStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x28f059db2ae1a9aea9151cda15502a2fef0edbfa93d68e0c351dcffb58856d7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3a821c249640d2f45ff10b79a340ec9c72d20860c3e326b6960be3c553ca3e5\",\"dweb:/ipfs/QmXhCBX5F7YC57cR1xLnVX2Vx2YvAykUrNbmFtYXtdDMjP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Staking.sol:staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 144,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)131"
							},
							{
								"astId": 147,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)131"
							},
							{
								"astId": 152,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_lastUpdateTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 154,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_rewardPerTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 158,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 162,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_rewards",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 164,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 168,
								"contract": "contracts/Staking.sol:staking",
								"label": "s_balances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)131": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 53,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 53,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 53,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 54,
							"src": "888:1952:0",
							"usedErrors": []
						}
					],
					"src": "112:2729:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 56,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 65,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 74,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 131,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 131,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 131,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 131,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 131,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 131,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							131
						],
						"NeedsMoreThanZero": [
							139
						],
						"ReentrancyGuard": [
							53
						],
						"TransferFailed": [
							137
						],
						"staking": [
							461
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 132,
							"src": "58:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 54,
							"src": "116:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 137,
							"name": "TransferFailed",
							"nameLocation": "190:14:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 136,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "204:2:2"
							},
							"src": "184:23:2"
						},
						{
							"id": 139,
							"name": "NeedsMoreThanZero",
							"nameLocation": "215:17:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 138,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "232:2:2"
							},
							"src": "209:26:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 140,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "257:15:2"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "257:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								53
							],
							"name": "staking",
							"nameLocation": "246:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "adca9b72",
									"id": 144,
									"mutability": "mutable",
									"name": "s_stakingToken",
									"nameLocation": "293:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "279:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$131",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 143,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 142,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 131,
											"src": "279:6:2"
										},
										"referencedDeclaration": 131,
										"src": "279:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$131",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0bd21c56",
									"id": 147,
									"mutability": "mutable",
									"name": "s_rewardsToken",
									"nameLocation": "328:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "314:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$131",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 146,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 145,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 131,
											"src": "314:6:2"
										},
										"referencedDeclaration": 131,
										"src": "314:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$131",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 150,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "416:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "392:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "428:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa0838f",
									"id": 152,
									"mutability": "mutable",
									"name": "s_lastUpdateTime",
									"nameLocation": "453:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "438:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "304ac91b",
									"id": 154,
									"mutability": "mutable",
									"name": "s_rewardPerTokenStored",
									"nameLocation": "491:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "476:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "476:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f245ace4",
									"id": 158,
									"mutability": "mutable",
									"name": "s_userRewardPerTokenPaid",
									"nameLocation": "555:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "522:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 155,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "530:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "522:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 156,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "539:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bea08151",
									"id": 162,
									"mutability": "mutable",
									"name": "s_rewards",
									"nameLocation": "619:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "586:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 161,
										"keyType": {
											"id": 159,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "594:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "586:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "603:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "s_totalSupply",
									"nameLocation": "653:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "637:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ab32eb69",
									"id": 168,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "706:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "673:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 167,
										"keyType": {
											"id": 165,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "681:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "673:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "690:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 174,
									"name": "Staked",
									"nameLocation": "731:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "754:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "738:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "775:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "759:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:45:2"
									},
									"src": "725:58:2"
								},
								{
									"anonymous": false,
									"id": 180,
									"name": "withdrewStake",
									"nameLocation": "795:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "825:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "809:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "846:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "830:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:45:2"
									},
									"src": "789:65:2"
								},
								{
									"anonymous": false,
									"id": 186,
									"name": "RewardsClaimed",
									"nameLocation": "866:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "897:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "881:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "918:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "902:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:45:2"
									},
									"src": "860:66:2"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "989:100:2",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "s_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "1000:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$131",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 195,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1022:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 194,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1015:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$131_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1015:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$131",
															"typeString": "contract IERC20"
														}
													},
													"src": "1000:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$131",
														"typeString": "contract IERC20"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "1000:35:2"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "s_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1046:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$131",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 201,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1068:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 200,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1061:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$131_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1061:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$131",
															"typeString": "contract IERC20"
														}
													},
													"src": "1046:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$131",
														"typeString": "contract IERC20"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1046:35:2"
											}
										]
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "954:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "946:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "rewardsToken",
												"nameLocation": "976:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "968:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:44:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:0:2"
									},
									"scope": 461,
									"src": "934:155:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1230:206:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1244:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1259:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1244:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "IfStatement",
												"src": "1241:76:2",
												"trueBody": {
													"id": 216,
													"nodeType": "Block",
													"src": "1261:56:2",
													"statements": [
														{
															"expression": {
																"id": 214,
																"name": "s_rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "1283:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 210,
															"id": 215,
															"nodeType": "Return",
															"src": "1276:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 218,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1336:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 222,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 219,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "1362:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 220,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "1362:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 221,
																								"name": "s_lastUpdateTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 152,
																								"src": "1378:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1362:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 223,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1361:34:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 224,
																					"name": "REWARD_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "1396:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1361:46:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1408:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "1361:51:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 228,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:53:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 229,
																	"name": "s_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1414:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1360:67:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1359:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1336:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 233,
												"nodeType": "Return",
												"src": "1329:99:2"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1185:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1222:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:9:2"
									},
									"scope": 461,
									"src": "1176:260:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1505:125:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 242,
																					"name": "s_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "1524:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 244,
																				"indexExpression": {
																					"id": 243,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 237,
																					"src": "1535:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1524:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 245,
																								"name": "rewardPerToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 235,
																								"src": "1545:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 246,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1545:16:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 247,
																								"name": "s_userRewardPerTokenPaid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 158,
																								"src": "1562:24:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 249,
																							"indexExpression": {
																								"id": 248,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 237,
																								"src": "1587:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1562:33:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1545:50:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 251,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1544:52:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1524:72:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 253,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1523:74:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1598:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1523:79:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 256,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1522:81:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 257,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1604:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 259,
														"indexExpression": {
															"id": 258,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1614:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1604:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1522:100:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 261,
												"nodeType": "Return",
												"src": "1516:106:2"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1453:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1460:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:17:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1497:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:9:2"
									},
									"scope": 461,
									"src": "1444:186:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1736:263:2",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1747:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 278,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1762:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1747:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1747:21:2"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 281,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1779:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 284,
														"indexExpression": {
															"expression": {
																"id": 282,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1790:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1790:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1779:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 285,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1803:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1779:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1832:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1832:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1843:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1825:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "EmitStatement",
												"src": "1820:30:2"
											},
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1866:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "1861:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 294,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1861:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 300,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1906:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_staking_$461",
																		"typeString": "contract staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_staking_$461",
																		"typeString": "contract staking"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1898:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1898:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1912:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 296,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1874:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$131",
																"typeString": "contract IERC20"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1874:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1874:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1861:58:2"
											},
											{
												"condition": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1933:8:2",
													"subExpression": {
														"id": 305,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1934:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "1930:62:2",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "1942:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 307,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1964:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "RevertStatement",
															"src": "1957:23:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 268,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1690:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1690:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 434,
												"src": "1677:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1677:24:2"
										},
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1702:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1702:12:2"
										},
										{
											"arguments": [
												{
													"id": 274,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 273,
												"name": "moreThanZero",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 448,
												"src": "1715:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1715:20:2"
										}
									],
									"name": "stake",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1661:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1653:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:16:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:2"
									},
									"scope": 461,
									"src": "1638:361:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2087:267:2",
										"statements": [
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2098:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 325,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2113:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2098:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2098:21:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 328,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2130:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 331,
														"indexExpression": {
															"expression": {
																"id": 329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2141:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2141:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2130:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 332,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2154:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2130:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2130:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2190:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2190:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2201:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "withdrewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2176:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "EmitStatement",
												"src": "2171:37:2"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2224:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "2219:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 341,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2219:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 345,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2256:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2256:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2267:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 343,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2232:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$131",
																"typeString": "contract IERC20"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "2232:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2219:55:2"
											},
											{
												"condition": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2288:8:2",
													"subExpression": {
														"id": 350,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2289:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 356,
												"nodeType": "IfStatement",
												"src": "2285:62:2",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "2297:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 352,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2319:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2319:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 354,
															"nodeType": "RevertStatement",
															"src": "2312:23:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 317,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2050:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2050:12:2"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 320,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2076:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2076:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 319,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 434,
												"src": "2063:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2063:24:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "2016:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2033:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2025:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:16:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:0:2"
									},
									"scope": 461,
									"src": "2007:347:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2431:276:2",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2450:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "2442:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2442:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"baseExpression": {
														"id": 369,
														"name": "s_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2457:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 372,
													"indexExpression": {
														"expression": {
															"id": 370,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2467:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2467:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2457:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2442:36:2"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 374,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2489:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 377,
														"indexExpression": {
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2499:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2499:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2489:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2511:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2489:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2489:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2543:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2543:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2554:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2528:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "2523:38:2"
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2577:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "2572:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 387,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2572:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2609:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2609:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2620:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 389,
															"name": "s_rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2585:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$131",
																"typeString": "contract IERC20"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "2585:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2572:55:2"
											},
											{
												"condition": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2641:8:2",
													"subExpression": {
														"id": 396,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2642:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "2638:62:2",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "2650:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 398,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2672:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 400,
															"nodeType": "RevertStatement",
															"src": "2665:23:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 360,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2394:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2394:12:2"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 363,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2420:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2420:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 365,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 434,
												"src": "2407:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2407:24:2"
										}
									],
									"name": "claimReward",
									"nameLocation": "2371:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:2"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:2"
									},
									"scope": 461,
									"src": "2362:345:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "2759:228:2",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 408,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2770:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 409,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "2793:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2793:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2770:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2770:39:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "s_lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2820:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 414,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2839:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2839:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2820:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2820:34:2"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 418,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2865:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 420,
														"indexExpression": {
															"id": 419,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2865:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 422,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 421,
															"name": "earned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2885:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2885:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2865:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2865:35:2"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 426,
															"name": "s_userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2911:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 428,
														"indexExpression": {
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2936:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2911:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2945:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2911:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2911:56:2"
											},
											{
												"id": 432,
												"nodeType": "PlaceholderStatement",
												"src": "2978:1:2"
											}
										]
									},
									"id": 434,
									"name": "updateReward",
									"nameLocation": "2724:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:17:2"
									},
									"src": "2715:272:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3030:96:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3044:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3052:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3044:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "3041:66:2",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "3054:53:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 441,
																	"name": "NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "3076:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3076:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 443,
															"nodeType": "RevertStatement",
															"src": "3069:26:2"
														}
													]
												}
											},
											{
												"id": 446,
												"nodeType": "PlaceholderStatement",
												"src": "3117:1:2"
											}
										]
									},
									"id": 448,
									"name": "moreThanZero",
									"nameLocation": "3002:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3023:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:16:2"
									},
									"src": "2993:133:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3202:45:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 455,
														"name": "s_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "3220:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 457,
													"indexExpression": {
														"id": 456,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3231:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3220:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 454,
												"id": 458,
												"nodeType": "Return",
												"src": "3213:26:2"
											}
										]
									},
									"functionSelector": "399080ec",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaked",
									"nameLocation": "3141:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3159:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3151:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:17:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3188:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:9:2"
									},
									"scope": 461,
									"src": "3132:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 462,
							"src": "237:3033:2",
							"usedErrors": [
								137,
								139
							]
						}
					],
					"src": "31:3239:2"
				},
				"id": 2
			}
		}
	}
}